# syntax=docker/dockerfile:1.4
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV LANG C.UTF-8

# Install system dependencies and language toolchains
RUN apt-get update && apt-get install -y \
    sudo unzip zip git wget curl nano lsb-release gnupg2 ca-certificates software-properties-common \
    build-essential cmake ninja-build pkg-config \
    python3 python3-pip python3-venv \
    php php-cli php-mbstring php-xml php-curl \
    openjdk-17-jdk maven \
    golang \
    clang gcc g++ \
    apt-transport-https \
    dotnet-sdk-7.0 aspnetcore-runtime-7.0 \
    postgresql-client mysql-client redis-tools \
    docker.io docker-compose \
    nvidia-cuda-toolkit \
    libgl1-mesa-glx libx11-dev \
    ca-certificates gnupg \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Add MongoDB apt repo and install mongosh (latest)
RUN curl -fsSL https://pgp.mongodb.com/server-6.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-server.gpg && \
    echo "deb [ arch=amd64 signed-by=/usr/share/keyrings/mongodb-server.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list && \
    apt-get update && \
    apt-get install -y mongodb-mongosh && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Node.js LTS and Corepack
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    corepack enable && \
    corepack prepare yarn@stable --activate && \
    corepack prepare pnpm@latest --activate

# Add dev user
ARG USERNAME=devuser
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
    usermod -aG sudo,docker $USERNAME && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER $USERNAME
WORKDIR /home/$USERNAME
CMD [ "bash" ]